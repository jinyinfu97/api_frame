import logging
import platform
from typing import Optional

from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.common.options import ArgOptions as ArgOptions
from selenium.webdriver.firefox.service import Service as FirefoxService
from selenium.webdriver.remote.webdriver import WebDriver
from webdriver_manager.chrome import ChromeDriverManager
from webdriver_manager.driver import ChromeDriver, GeckoDriver
from webdriver_manager.firefox import GeckoDriverManager

__all__ = ["get_webdriver"]


def _geckodriver_get_url(self) -> str:
    base_url = "https://npm.taobao.org/mirrors/geckodriver"
    name = (
        f"{self.get_name()}-{self.get_version()}-{self.get_os_type()}{'-aarch64' if (self.get_os_type() == 'macos' and not platform.processor() == 'i386') else ''}"
        + ".zip"
    )
    url = f"{base_url}/{self.get_version()}/{name}"
    return url


GeckoDriver.get_url = _geckodriver_get_url


def get_chrome_manager():
    return ChromeDriverManager(
        url="https://npm.taobao.org/mirrors/chromedriver",
        latest_release_url="https://npm.taobao.org/mirrors/chromedriver"
        "/LATEST_RELEASE",
        log_level=logging.ERROR,
    )


def get_webdriver(
    browser="chrome",
    options: Optional[ArgOptions] = None,
) -> WebDriver:
    """
    自动就绪selenium，目前只支持Chrome 和 FireFox
    1. 下载浏览器驱动
    2. 实例化Service
    3. 实例化WebDriver
    :param browser:
    :param options:
    :return:
    """
    browser = browser.lower()
    if browser == "chrome":
        _path = get_chrome_manager().install()
        return webdriver.Chrome(
            service=ChromeService(executable_path=_path),
            options=options,
        )

    elif browser == "firefox":
        _path = GeckoDriverManager(log_level=logging.ERROR).install()
        return webdriver.Firefox(
            service=FirefoxService(executable_path=_path),
            options=options,
        )
