# NOTE: Generated By HttpRunner v3.1.6
# FROM: login.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseLogin(HttpRunner):

    config = Config("testcase description").verify(False)

    teststeps = [
        Step(
            RunRequest("/User/home/GetCToken")
            .post("https://tradeapineice.1234567.com.cn/User/home/GetCToken")
            .with_headers(
                **{
                    "Host": "tradeapineice.1234567.com.cn",
                    "Accept": "*/*",
                    "Accept-Language": "zh-cn",
                    "Content-Type": "application/x-www-form-urlencoded",
                    "Connection": "keep-alive",
                    "GTOKEN": "A641CBFE4352465485D0447C8D51AFe3",
                    "User-Agent": "app-iphone-client-iPhone13,2-87C7E8F1-4A80-4045-B0DD-443176FFA5D3",
                    "clientInfo": "ttjj-iPhone13,2-iOS-iOS15.0.2",
                    "Content-Length": "325",
                    "Accept-Encoding": "gzip",
                }
            )
            .with_data(
                {
                    "CToken": "h-1chre-udknkf6nnk--q6e8huhfuerh.1",
                    "PhoneType": "Iphone",
                    "Version": "6.4.8",
                    "ServerVersion": "6.4.8",
                    "ReqNo": "2281621467",
                    "AppType": "ttjj",
                    "DeviceOS": "iOS 15.0.2",
                    "MobileKey": "87C7E8F1-4A80-4045-B0DD-443176FFA5D3",
                    "GTOKEN": "A641CBFE4352465485D0447C8D51AFe3",
                    "MarketChannel": "Appstore",
                    "DeviceType": "iPhone13,2",
                    "appVersion": "6.4.8",
                    "DeviceName": "Xinçš„iPhone",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json; charset=utf-8")
            .assert_equal("body.Data", "1jrqked1cd6-qqee1-k18knadkjeuuff.1")
            .assert_equal("body.ErrorCode", 0)
            .assert_equal("body.InnerErrorCode", None)
            .assert_equal("body.FirstError", None)
            .assert_equal("body.Message", "")
            .assert_equal("body.DebugError", None)
            .assert_equal("body.Success", True)
            .assert_equal("body.NotCache", False)
            .assert_equal("body.HasWrongToken", False)
        ),
        Step(
            RunRequest("/User/home/LoginCheckForMobile")
            .post("https://tradeapineice.1234567.com.cn/User/home/LoginCheckForMobile")
            .with_headers(
                **{
                    "Host": "tradeapineice.1234567.com.cn",
                    "Accept": "*/*",
                    "Accept-Language": "zh-cn",
                    "Content-Type": "application/x-www-form-urlencoded",
                    "Connection": "keep-alive",
                    "GTOKEN": "A641CBFE4352465485D0447C8D51AFe3",
                    "User-Agent": "app-iphone-client-iPhone13,2-87C7E8F1-4A80-4045-B0DD-443176FFA5D3",
                    "clientInfo": "ttjj-iPhone13,2-iOS-iOS15.0.2",
                    "Content-Length": "329",
                    "Accept-Encoding": "gzip",
                }
            )
            .with_data(
                {
                    "CToken": "1jrqked1cd6-qqee1-k18knadkjeuuff.1",
                    "PhoneType": "Iphone",
                    "Version": "6.4.8",
                    "ServerVersion": "6.4.8",
                    "ReqNo": "4031317180",
                    "CertificateType": "0",
                    "Password": "a250dc3b2aa387141f5e1d0e0e6d2485",
                    "AppType": "ttjj",
                    "MobileKey": "87C7E8F1-4A80-4045-B0DD-443176FFA5D3",
                    "GTOKEN": "A641CBFE4352465485D0447C8D51AFe3",
                    "MarketChannel": "Appstore",
                    "appVersion": "6.4.8",
                    "Account": "15618392885",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json; charset=utf-8")
            .assert_equal("body.ErrorCode", 0)
            .assert_equal("body.InnerErrorCode", None)
            .assert_equal("body.FirstError", None)
            .assert_equal("body.Message", None)
            .assert_equal("body.DebugError", None)
            .assert_equal("body.Success", True)
            .assert_equal("body.NotCache", False)
            .assert_equal("body.HasWrongToken", False)
        ),
    ]


if __name__ == "__main__":
    TestCaseLogin().test_start()
