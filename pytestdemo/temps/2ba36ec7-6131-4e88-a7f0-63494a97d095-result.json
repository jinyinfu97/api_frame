{"name": "test_attend_activity[caseinfo19-caseinfo21]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <pytestdemo.testcases.fund_login.test_login.TestFundLogin object at 0x00000222B1CAA970>\ncaseinfo1 = {'extract': {'CToken': '$.Data.CToken', 'CustomerName': '$.Data.CustomerName', 'CustomerNo': '$.Data.CustomerNo', 'Pas...ers': {'Accept': '*/*', 'Host': 'tradeapineice.1234567.com.cn'}, 'method': 'POST', 'url': '/LoginCheckForMobile'}, ...}\ncaseinfo2 = {'name': '天天基金用户参与活动---拆福袋', 'request': {'data': {'activeid': 'A20211210163821', 'ctoken': '${get_extra_data(CToken)}'...72561'}, 'method': 'POST', 'url': '/attendActive'}, 'validate': [{'eq': {'status_code': 200}}, {'eq': {'ErrCode': 0}}]}\n\n    @pytest.mark.parametrize(\"caseinfo2\", read_testcase_yaml('/testcases/fund_login/attend_activity.yaml'))  # 3个参与接口\n    @pytest.mark.parametrize(\"caseinfo1\", read_testcase_csv('/testcases/fund_login/login_data.yaml'))  # 2个用户\n    def test_attend_activity(self, caseinfo1, caseinfo2):\n>       RequestsUtil(Debug_talk(), 'base_login_url').anylasic_testcase(caseinfo1)\n\ntestcases\\fund_login\\test_login.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\requests_util.py:71: in anylasic_testcase\n    self.assert_value(caseinfo['validate'])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pytestdemo.common.requests_util.RequestsUtil object at 0x00000222B1C5F2E0>\nlx = [{'eq': {'status_code': 200}}, {'eq': 'equal(Success=True)'}]\n\n    def assert_value(self, lx):\n        all_flag = 0\n        for n in lx:\n            for key, value in n.items():\n                if key == 'eq' and 'equal(' not in value:\n                    flag = self.assert_equal(value)\n                    all_flag = all_flag + flag\n                elif key == 'eq' and 'equal(' in value:\n                    flag = self.assert_equal_csv(value)\n                    all_flag = all_flag + flag\n                elif key == 'contain' and 'contain(' in value:\n                    flag = self.assert_contain_csv(value)\n                    all_flag = all_flag + flag\n                elif key == 'contain' and 'contain(' not in value:\n                    flag = self.assert_contain(value)\n                    all_flag = all_flag + flag\n                else:\n                    print('该框架不支持该断言方式！！')\n        # print(all_flag)\n>       assert all_flag == 0\nE       AssertionError\n\ncommon\\requests_util.py:95: AssertionError"}, "attachments": [{"name": "log", "source": "188d719d-2c0d-4eba-9119-3acf6388bf94-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo1", "value": "{'name': '马龙飞天天基金登录成功用例', 'parameterize': {'name-Account-Password-assert_str1-assert_str2': '/data/fund_login.csv'}, 'request': {'data': {'CToken': '${get_extra_data(Data)}', 'Version': '6.4.8', 'ServerVersion': '6.4.8', 'MobileKey': '87C7E8F1-4A80-4045-B0DD-443176FFA5D3', 'GTOKEN': 'A641CBFE4352465485D0447C8D51AFe3', 'appVersion': '6.4.8', 'Password': '${md5(mlf1234qwer)}', 'Account': '18717789585'}, 'url': '/LoginCheckForMobile', 'method': 'POST', 'headers': {'Host': 'tradeapineice.1234567.com.cn', 'Accept': '*/*'}}, 'extract': {'CToken': '$.Data.CToken', 'UToken': '$.Data.UToken', 'CustomerNo': '$.Data.CustomerNo', 'CustomerName': '$.Data.CustomerName', 'PassportID': '$.Data.PassportID'}, 'validate': [{'eq': {'status_code': 200}}, {'eq': 'equal(Success=True)'}]}"}, {"name": "caseinfo2", "value": "{'name': '天天基金用户参与活动---拆福袋', 'request': {'data': {'ctoken': '${get_extra_data(CToken)}', 'utoken': '${get_extra_data(UToken)}', 'deviceid': '87C7E8F1-4A80-4045-B0DD-443176FFA5D3', 'taskid': 'T6_20211210045536', 'activeid': 'A20211210163821', 'passportid': '${get_extra_data(PassportID)}', 'userid': '${get_extra_data(CustomerNo)}'}, 'url': '/attendActive', 'method': 'POST', 'headers': {'Cookie': 'st_inirUrl=; st_pvi=36971439613168; st_sp=2021-12-21%2010%3A24%3A42; st_si=38503547772561'}}, 'validate': [{'eq': {'status_code': 200}}, {'eq': {'ErrCode': 0}}]}"}], "start": 1644892425196, "stop": 1644892425316, "uuid": "bd5075b4-573d-461d-9ae6-1ee930e5b3a3", "historyId": "dfcf4f16def40c5c143eed7bea65efc4", "testCaseId": "d446cb7c54c702c2394194f549be957a", "fullName": "testcases.fund_login.test_login.TestFundLogin#test_attend_activity", "labels": [{"name": "parentSuite", "value": "testcases.fund_login"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestFundLogin"}, {"name": "host", "value": "EM-20210524TVTX"}, {"name": "thread", "value": "34092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.fund_login.test_login"}]}