#coding=gbk
import openpyxl


# 二、请以面向对象的编程方式完成以下要求。
# 某购物网站每日的用户购物数据都需要汇总整理，某天的购物数据如表所示。请创建一个类，并有以下的方法可以被调用：
# 1.实例化购物数据类，传入购物数据表格的文件路径后，并打印实例时，将统计描述结果自动返回并在控制台打印（提示：需要配合使用__init()__、__str()__、df.describe()等方法）。
# 2.创建方法，在控制台返回传入实例表格的基本信息（提示：需要一个自建方法，需配合df.info()）。
# 3.创建方法，在控制台返回每天的销售额（提示：需要一个自建方法，销售额=访客数*支付转化率*客单价）。
# 4.创建方法，将源数据按如下要求整理后汇总到一个新的Excel表格中：
# （1）去掉来源明细列中的“-”；
# （2）增加“销售额”列，销售额=访客数*支付转化率*客单价；
# （3）增加“统计日期”列，为今日实际统计的日期



class shopdata:
    '''
    这是购物统计表
    '''

    def __init__(self, path):
        self.path = path
    def describe(self):

        return '这是购物统计表'
    def info(self,data):
        self.data = data
        return self.data

    # 3.创建方法，在控制台返回每天的销售额（提示：需要一个自建方法，销售额=访客数*支付转化率*客单价）。
    #点击 点击率 平均点击价格
    def money(self):
        num = 0
        for i in self.data:
            num = num + 1
            self.moneydata = i['点击']*i['点击率']*i['平均点击价格']
            print(f'第{num}个销售额为{self.moneydata}')
            return self.moneydata

    def __str__(self):
        """返回一个对象的描述信息"""
        # print(num)
        return (f'购物统计表的路径为{self.path},描述信息为{shopdata.describe(self)}')
    def finall(self):
        print(db)
        datalist = [
            {'plan': '计划A', '展现': 50000, '点击': 5500, '消费': 6000, '点击率': 0.15, '平均点击价格': 1.2, '网页转化': 50, '商桥转化': 0,
             '电话转化': 0},
            {'plan': '计划B', '展现': 40000, '点击': 4500, '消费': 5000, '点击率': 0.1, '平均点击价格': 1.3, '网页转化': 45, '商桥转化': 0,
             '电话转化': 0},
            {'plan': '计划C', '展现': 30000, '点击': 3500, '消费': 4000, '点击率': 0.12, '平均点击价格': 1.5, '网页转化': 40, '商桥转化': 0,
             '电话转化': 0},
            {'plan': '计划D', '展现': 20000, '点击': 2500, '消费': 3000, '点击率': 0.11, '平均点击价格': 1.6, '网页转化': 35, '商桥转化': 0,
             '电话转化': 0},
            {'plan': '计划E', '展现': 10000, '点击': 1500, '消费': 2000, '点击率': 0.19, '平均点击价格': 1.8, '网页转化': 30, '商桥转化': 0,
             '电话转化': 0}]
        db.info(datalist)
        db.money()


db=shopdata('test_data.xlsx')
db.finall()

